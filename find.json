[{"cmd":"find","msg":"# Executes a command on the files and folders matching a given pattern, in this case, output the last lines of each .foo file in the current folder and subfolders. \nfind . -name \"*.foo\" -exec tail {} \\;","updated_at":"2016-03-01T21:08:27.000Z","id":77,"up":42,"down":0},{"cmd":"find","msg":"# Outputs all the file names/paths that start with the name \"Casey\".  Searches recursively starting from my current directory (.)\n# Throws out any error output by sending it to /dev/null \nfind . -name \"Casey*\" 2\u003E/dev/null","updated_at":"2016-02-04T11:48:56.000Z","id":14,"up":29,"down":0},{"cmd":"find","msg":"# Finds all files in and under the current directory that contain 'foo' in their name\nfind . -iname '*foo*'","updated_at":"2016-01-26T22:17:46.000Z","id":30,"up":20,"down":1},{"cmd":"find","msg":"# Searches entire computer starting at root for the file \"hashClass.java\".  Throws out error output by sending it to /dev/null.\n# If we didn't throw out the error output, we'd get a bunch of \"User doesn't have permissions to view directory\" errors\nfind / -name \"hashClass.java\" 2\u003E/dev/null","updated_at":"2015-11-20T21:24:33.000Z","id":15,"up":10,"down":0},{"cmd":"find","msg":"# directory -\u003E chmod 700\n# file executable -\u003E chmod 700\n# file -\u003E chmod 600\n# You can apply this to directory that needs more secure permission\n# recursively. Like `~/.ssh`. `+` means run at once, not one by one. Like\n# `xargs`.\nfind .private -type d -execdir chmod 700 '{}' + \\\n-or -type f -executable -execdir chmod 777 '{}' + \\\n-or -type f -execdir chmod 600 '{}' +","updated_at":"2015-04-08T07:44:11.000Z","id":380,"up":7,"down":0},{"cmd":"find","msg":"# Find and remove empty directories\nfind . -type d -empty -delete\n\n# Find and remove empty files\nfind . -type f -empty -delete","updated_at":"2015-11-24T23:33:31.000Z","id":688,"up":4,"down":0},{"cmd":"find","msg":"# Find and remove files recursively starting in the current directory.\nfind . -name \"FILE_TO_FIND\" - exec rm -rf {} \\;\n\n# Especially useful for finding and removing temporary files.\n# e.g. To remove compiled python files:\nfind . -name '*.pyc' -exec rm -rf {} \\;","updated_at":"2015-04-16T14:23:26.000Z","id":608,"up":3,"down":0},{"cmd":"find","msg":"# Find all files in home directory that does not match my user/group.\n# Then change owner:group to my user/group.\nfind ~/ \\( -not -group $(id -g) -or -not -user $USER \\) -execdir chown $USER: '{}' +","updated_at":"2014-03-05T09:19:48.000Z","id":485,"up":2,"down":0},{"cmd":"find","msg":"# Find files that were modified less than 4 days ago and more than two days. Notice that `find -ctime +3 -ctime -4` would give no results.\nfind -ctime +2 -ctime -4","updated_at":"2015-04-01T05:43:03.000Z","id":719,"up":2,"down":0},{"cmd":"find","msg":"# Find files modified within a specific date range.\ntouch --date \"2007-01-01\" /tmp/start\ntouch --date \"2008-01-01\" /tmp/end\nfind /data/images -type f -newer /tmp/start -not -newer /tmp/end","updated_at":"2015-04-01T05:43:09.000Z","id":720,"up":2,"down":0},{"cmd":"find","msg":"# Searches through my user's \"home\" directory recursively for the file \"hashClass.java\", throwing out error output along the way.  \n# Passes the output to grep for case insensitive search.\nfind ~/ 2\u003E/dev/null | grep -i \"hashclass.java\"","updated_at":"2014-04-04T18:46:30.000Z","id":16,"up":3,"down":2},{"cmd":"find","msg":"# Find all subdirectories that have been created in the last 5 days.\nfind . -type d -ctime -5","updated_at":"2014-01-27T10:48:36.000Z","id":323,"up":1,"down":0},{"cmd":"find","msg":"# find last modified file in current directory recursively except directory\nfind ./ -not -type d -printf \"%T+ %p\\n\" | sort | tail -1","updated_at":"2014-02-16T05:59:51.000Z","id":559,"up":1,"down":0},{"cmd":"find","msg":"# Find broken symlinks\nfind -L . -type l","updated_at":"2014-03-27T20:01:55.000Z","id":675,"up":1,"down":0},{"cmd":"find","msg":"# Find all symlinks to specific file (GNU find)\nfind -L /dev -samefile /dev/video0","updated_at":"2015-04-01T08:01:59.000Z","id":1061,"up":1,"down":0},{"cmd":"find","msg":"# Find all images in and under current directory using regular expression.\n# Regex should start with .* because find displays full path.\nfind . -regextype awk -regex \".*(jpg|jpeg|png)$\"","updated_at":"2015-08-11T12:13:31.000Z","id":1154,"up":1,"down":0},{"cmd":"find","msg":"# Find all images in and under current directory using regular expression.\n# Regex should start with .* because find displays full path.\nfind . -regextype sed -regex \".*[jpg|jpeg|png]\"","updated_at":"2015-08-11T12:12:24.000Z","id":1152,"up":0,"down":1}]